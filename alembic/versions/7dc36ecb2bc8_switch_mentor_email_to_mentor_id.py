"""Switch mentor_email to mentor_id

Revision ID: 7dc36ecb2bc8
Revises: ghi789jkl012
Create Date: 2025-05-23 04:15:14.317278

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = "7dc36ecb2bc8"
down_revision: Union[str, None] = 'ghi789jkl012'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


userrole_enum = sa.Enum("admin", "user", name="userrole")
def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    userrole_enum.create(op.get_bind(), checkfirst=True)
    op.create_index(op.f("ix_announcements_id"), "announcements", ["id"], unique=False)
    op.create_unique_constraint(None, "announcements", ["title"])
    op.add_column("users", sa.Column("mentor_id", sa.Integer(), nullable=True))
    op.alter_column("users", "email", existing_type=sa.TEXT(), nullable=False)
    op.alter_column(
        "users",
        "role",
        existing_type=sa.TEXT(),
        type_=sa.Enum("admin", "user", name="userrole"),
        existing_nullable=False,
        postgresql_using="role::userrole",
    )
    op.create_foreign_key(None, "users", "users", ["mentor_id"], ["id"])
    op.drop_column("users", "mentor_email")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column("mentor_email", sa.TEXT(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "users", type_="foreignkey")
    op.alter_column(
        "users",
        "role",
        existing_type=sa.Enum("admin", "user", name="userrole"),
        type_=sa.TEXT(),
        existing_nullable=False,
    )
    op.alter_column("users", "email", existing_type=sa.TEXT(), nullable=True)
    op.drop_column("users", "mentor_id")
    op.drop_constraint(None, "announcements", type_="unique")
    op.drop_index(op.f("ix_announcements_id"), table_name="announcements")
    # ### end Alembic commands ###
    userrole_enum.drop(op.get_bind(), checkfirst=True)