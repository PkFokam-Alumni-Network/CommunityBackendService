"""Add timeaware columns for sessions

Revision ID: db3e76a05172
Revises: 2ef7fd2fb886
Create Date: 2025-10-22 23:39:43.691776

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import datetime

# revision identifiers, used by Alembic.
revision: str = 'db3e76a05172'
down_revision: Union[str, None] = '2ef7fd2fb886'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('sessions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=datetime.timezone.utc),
               existing_nullable=True)
    op.alter_column('sessions', 'expires_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=datetime.timezone.utc),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('sessions', 'expires_at',
               existing_type=sa.DateTime(timezone=datetime.timezone.utc),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('sessions', 'created_at',
               existing_type=sa.DateTime(timezone=datetime.timezone.utc),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    # ### end Alembic commands ###
